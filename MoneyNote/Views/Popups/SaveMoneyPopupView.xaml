<?xml version="1.0" encoding="UTF-8" ?>
<popups:PopupPage
    x:Class="MoneyNote.Views.Popups.SaveMoneyPopupView"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
    xmlns:controls="clr-namespace:MoneyNote.Controls"
    xmlns:d="http://xamarin.com/schemas/2014/forms/design"
    xmlns:forms="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
    xmlns:material="clr-namespace:XF.Material.Forms.UI;assembly=XF.Material"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:popups="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:touch="clr-namespace:TouchEffect;assembly=TouchEffect"
    xmlns:viewModels="clr-namespace:MoneyNote.ViewModels.PopupsViewModels"
    mc:Ignorable="d">
    <popups:PopupPage.BindingContext>
        <viewModels:SaveMoneyPopupViewModel x:Name="viewModel" />
    </popups:PopupPage.BindingContext>
    <popups:PopupPage.Animation>
        <animations:ScaleAnimation
            x:Name="animation"
            DurationIn="800"
            DurationOut="1000"
            HasBackgroundAnimation="True"
            PositionIn="Top"
            PositionOut="Center"
            ScaleIn="1.2"
            ScaleOut="0.1" />
    </popups:PopupPage.Animation>
    <Grid
        ColumnDefinitions="*,Auto,*"
        ColumnSpacing="0"
        RowDefinitions="Auto,Auto">
        <Frame
            x:Name="originalPanel"
            Grid.Column="1"
            Padding="0"
            CornerRadius="10"
            HorizontalOptions="Center"
            IsVisible="{Binding IsOriginalVisible, Mode=TwoWay}"
            VerticalOptions="Start">
            <StackLayout
                x:Name="this"
                Orientation="Vertical"
                WidthRequest="300">
                <ImageButton
                    Margin="0,10,10,0"
                    Aspect="AspectFit"
                    BackgroundColor="Transparent"
                    Clicked="Cancel_Button_Clicked"
                    HeightRequest="30"
                    HorizontalOptions="End"
                    Source="close.png"
                    VerticalOptions="Start" />
                <forms:AnimationView
                    Margin="0,-5,0,0"
                    Animation="safe.json"
                    AutoPlay="True"
                    HeightRequest="150"
                    Loop="True"
                    Progress="1"
                    WidthRequest="100" />
                <material:MaterialButton
                    x:Name="categoryButton"
                    Margin="3,0"
                    Padding="0"
                    BackgroundColor="{StaticResource PopupButton}"
                    Command="{Binding CategoryButtonCommand}"
                    CornerRadius="5"
                    Elevation="10"
                    FontSize="Medium"
                    HeightRequest="70"
                    HorizontalOptions="FillAndExpand"
                    Text="{Binding ChooseButtonText}"
                    TextColor="{StaticResource ButtonText}"
                    VerticalOptions="FillAndExpand" />
                <Frame Margin="10,1" Padding="0">
                    <controls:CustomEntry
                        x:Name="entry"
                        FontFamily="MainFont"
                        Keyboard="Numeric"
                        Placeholder="{Binding Strings[enter_save_text]}"
                        PlaceholderColor="{StaticResource AboutBackGround}"
                        ReturnType="Next"
                        TextColor="{StaticResource PopupButton}" />
                </Frame>
                <Frame Margin="10,1" Padding="0">
                    <controls:CustomTextEntry
                        x:Name="entryDescription"
                        ClearButtonVisibility="WhileEditing"
                        FontFamily="MainFont"
                        Keyboard="Text"
                        Placeholder="{Binding Strings[enter_miss_description]}"
                        PlaceholderColor="{StaticResource AboutBackGround}"
                        ReturnType="Done"
                        TextColor="{StaticResource PopupButton}" />
                </Frame>
                <StackLayout
                    Margin="15,5,10,0"
                    Orientation="Horizontal"
                    Spacing="0">
                    <Label
                        FontSize="Small"
                        Text="{Binding TextFromToCash}"
                        VerticalOptions="Center" />
                    <Switch x:Name="cashSwitch" HorizontalOptions="EndAndExpand">
                        <Switch.Triggers>
                            <DataTrigger
                                Binding="{Binding Source={x:Reference cardSwitch}, Path=IsToggled}"
                                TargetType="Switch"
                                Value="True">
                                <Setter Property="IsToggled" Value="False" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding Source={x:Reference cardSwitch}, Path=IsToggled}"
                                TargetType="Switch"
                                Value="False">
                                <Setter Property="IsToggled" Value="True" />
                            </DataTrigger>
                        </Switch.Triggers>
                    </Switch>
                </StackLayout>
                <StackLayout
                    Margin="15,5,10,0"
                    Orientation="Horizontal"
                    Spacing="0">
                    <Label
                        FontSize="Small"
                        Text="{Binding TextFromToCard}"
                        VerticalOptions="Center" />
                    <Switch x:Name="cardSwitch" HorizontalOptions="EndAndExpand">
                        <Switch.Triggers>
                            <DataTrigger
                                Binding="{Binding Source={x:Reference cashSwitch}, Path=IsToggled}"
                                TargetType="Switch"
                                Value="True">
                                <Setter Property="IsToggled" Value="False" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding Source={x:Reference cashSwitch}, Path=IsToggled}"
                                TargetType="Switch"
                                Value="False">
                                <Setter Property="IsToggled" Value="True" />
                            </DataTrigger>
                        </Switch.Triggers>
                    </Switch>
                </StackLayout>
                <material:MaterialButton
                    Margin="-7"
                    Padding="0"
                    BackgroundColor="{StaticResource PopupButton}"
                    Clicked="Button_Clicked"
                    CornerRadius="0"
                    Elevation="10"
                    FontSize="Title"
                    HeightRequest="80"
                    HorizontalOptions="FillAndExpand"
                    Text="{Binding Strings[save]}"
                    TextColor="{StaticResource BackgroundWhite}"
                    VerticalOptions="FillAndExpand" />
            </StackLayout>
            <Frame.GestureRecognizers>
                <TapGestureRecognizer Tapped="PlugForGridGesture" />
            </Frame.GestureRecognizers>
        </Frame>
        <Frame
            x:Name="categoryPanel"
            Grid.Column="1"
            Padding="0"
            CornerRadius="10"
            IsVisible="{Binding IsCategoriesVisible, Mode=TwoWay}"
            VerticalOptions="Center">
            <StackLayout Orientation="Vertical" WidthRequest="300">
                <ImageButton
                    Margin="0,10,10,0"
                    Aspect="AspectFit"
                    BackgroundColor="Transparent"
                    Clicked="Cancel_Button_Clicked"
                    HeightRequest="30"
                    HorizontalOptions="End"
                    Source="close.png"
                    VerticalOptions="Start" />
                <Label
                    FontSize="Title"
                    HeightRequest="30"
                    HorizontalOptions="Center"
                    Text="{Binding Strings[choose_category]}"
                    TextColor="{StaticResource BoldLabel}" />
                <ScrollView
                    Margin="6"
                    Padding="0"
                    Orientation="Vertical">
                    <StackLayout
                        x:Name="bindableCategoryList"
                        BindableLayout.ItemsSource="{Binding CategoryList, Mode=TwoWay}"
                        Orientation="Vertical"
                        Spacing="0">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <Frame
                                    x:Name="frame"
                                    Margin="3"
                                    Padding="0"
                                    touch:TouchEff.Command="{Binding Path=SwitchCategoryCommand, Source={x:Reference viewModel}}"
                                    touch:TouchEff.CommandParameter="{Binding Id}"
                                    touch:TouchEff.PressedScale="0.9"
                                    touch:TouchEff.RegularAnimationDuration="100">
                                    <Grid
                                        ColumnDefinitions="50, *"
                                        HorizontalOptions="Start"
                                        RowDefinitions="50">
                                        <Image x:Name="image" Source="{Binding Image}" />
                                        <Label
                                            x:Name="label"
                                            Grid.Column="1"
                                            FontSize="Medium"
                                            Text="{Binding Name}"
                                            TextColor="{StaticResource PopupButton}"
                                            VerticalOptions="Center">
                                            <Label.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsSelected}"
                                                    TargetType="Label"
                                                    Value="True">
                                                    <Setter Property="TextColor" Value="{StaticResource MainGreen}" />
                                                </DataTrigger>
                                            </Label.Triggers>
                                        </Label>
                                    </Grid>
                                    <Frame.Triggers>
                                        <DataTrigger
                                            Binding="{Binding IsSelected}"
                                            TargetType="Frame"
                                            Value="True">
                                            <Setter Property="BackgroundColor" Value="{StaticResource AboutBackGround}" />
                                        </DataTrigger>
                                    </Frame.Triggers>
                                </Frame>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </StackLayout>
                </ScrollView>
            </StackLayout>
            <Frame.GestureRecognizers>
                <TapGestureRecognizer Tapped="PlugForGridGesture" />
            </Frame.GestureRecognizers>
        </Frame>
        <Grid.GestureRecognizers>
            <TapGestureRecognizer Tapped="Cancel_Button_Clicked" />
        </Grid.GestureRecognizers>
    </Grid>

</popups:PopupPage>
